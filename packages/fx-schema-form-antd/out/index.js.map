{"version":3,"file":"index.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3bd132a7f3ff4c83d22d","webpack:///external \"json-pointer\"","webpack:///external \"fx-schema-form-core\"","webpack:///./src/reducer/form.tsx","webpack:///./src/index.tsx","webpack:///external \"redux-act\"","webpack:///external \"lodash.clonedeep\"","webpack:///./src/factory.tsx","webpack:///./src/libs/ns.factory.tsx","webpack:///./src/fields/index.tsx","webpack:///./src/libs/create.tsx","webpack:///./src/libs/meta.tsx","webpack:///external \"uuid\"","webpack:///./src/hocs/index.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"json-pointer\"), require(\"fx-schema-form-core\"), require(\"uuid\"), require(\"redux-act\"), require(\"lodash.clonedeep\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fx-schema-form-antd\", [\"json-pointer\", \"fx-schema-form-core\", \"uuid\", \"redux-act\", \"lodash.clonedeep\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fx-schema-form-antd\"] = factory(require(\"json-pointer\"), require(\"fx-schema-form-core\"), require(\"uuid\"), require(\"redux-act\"), require(\"lodash.clonedeep\"));\n\telse\n\t\troot[\"fx-schema-form-antd\"] = factory(root[\"json-pointer\"], root[\"fx-schema-form-core\"], root[\"uuid\"], root[\"redux-act\"], root[\"lodash.clonedeep\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3bd132a7f3ff4c83d22d","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"json-pointer\"\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fx-schema-form-core\"\n// module id = 1\n// module chunks = 0","import { createAction, createReducer, EmptyActionCreator, SimpleActionCreator, ComplexActionCreator } from \"redux-act\";\nimport { Reducer } from \"redux\";\nimport jpp from \"json-pointer\";\nimport cloneDeep from \"lodash.clonedeep\";\n\nimport { MetaData, SchemaFormMeta } from \"../libs/meta\";\n\nexport interface SchemaFormState<T> {\n    data: T;\n    meta: any;\n}\n\nexport interface Actions {\n    updateItem: SimpleActionCreator<{ keys: Array<string>, data: any }>;\n    toggleItem: SimpleActionCreator<{ keys: Array<string> }>;\n    removeItem: SimpleActionCreator<{ keys: Array<string>, data: any }>;\n    addItem: SimpleActionCreator<{ keys: Array<string>, data: any }>;\n    switchItem: SimpleActionCreator<{ keys: Array<string>, data: any }>;\n    updateMetaState: SimpleActionCreator<any>;\n    updateItemMeta: SimpleActionCreator<{ keys: Array<string>, data: any }>;\n    updateData: SimpleActionCreator<{ data: any }>;\n}\n\nexport class FormReducer<T> {\n    /**\n     * 单个元素的值变化时候调用\n     */\n    private updateItem: SimpleActionCreator<{ keys: Array<string>, data: any }> = createAction(\"更新表单值\");\n    /**\n     * 显示/隐藏元素\n     */\n    private toggleItem: SimpleActionCreator<{ keys: Array<string> }> = createAction(\"显示/隐藏元素\");\n    /**\n     * 删除元素\n     */\n    private removeItem: SimpleActionCreator<{ keys: Array<string>, data: any }> = createAction(\"删除元素\");\n    /**\n     * 添加元素\n     */\n    private addItem: SimpleActionCreator<{ keys: Array<string>, data: any }> = createAction(\"添加元素\");\n    /**\n     * 元素移位\n     */\n    private switchItem: SimpleActionCreator<{ keys: Array<string>, data: any }> = createAction(\"元素移位\");\n    /**\n     * 初始化元素的meta信息\n     */\n    private updateItemMeta: SimpleActionCreator<{ keys: Array<string>, data: any }> = createAction(\"更新元素的meta信息\");\n    /**\n     * 更改meta的状态\n     */\n    private updateMetaState: SimpleActionCreator<{ data: any }> = createAction(\"更改meta的状态\");\n    /**\n     * 更改meta的状态\n     */\n    private updateData: SimpleActionCreator<{ data: any }> = createAction(\"更改data的值\");\n\n    /**\n     * 构造\n     * @param initialState 初始化状态\n     * @param meta         当前的meta类\n     * @param updateState  更改数据的方法\n     */\n    constructor(\n        private initialState: any,\n        private meta: any,\n        private getOriginState?: (state: any) => any,\n        private updateState?: (state: any, data: any) => any) { }\n\n    /**\n     * 获取当前的actions\n     */\n    public get actions(): Actions {\n        return {\n            updateItem: this.updateItem,\n            toggleItem: this.toggleItem,\n            removeItem: this.removeItem,\n            addItem: this.addItem,\n            switchItem: this.switchItem,\n            updateMetaState: this.updateMetaState,\n            updateItemMeta: this.updateItemMeta,\n            updateData: this.updateData\n        };\n    }\n\n    /**\n     * 返回当前的reducer\n     */\n    public get reducer(): Reducer<any> {\n        return createReducer<any>({\n            [this.updateItem as any]: this.updateItemHandle.bind(this),\n            [this.toggleItem as any]: this.toggleItemHandle.bind(this),\n            [this.addItem as any]: this.addItemHandle.bind(this),\n            [this.removeItem as any]: this.removeItemHandle.bind(this),\n            [this.switchItem as any]: this.switchItemHandle.bind(this),\n            [this.updateMetaState as any]: this.updateMetaStateHandle.bind(this),\n            [this.updateItemMeta as any]: this.updateMetaHandle.bind(this),\n            [this.updateData as any]: this.updateDataHandle.bind(this),\n        }, this.initialState);\n    }\n\n    /**\n     * 更新全部数据\n     * @param state state\n     * @param data  data\n     */\n    private updateDataHandle(state: SchemaFormState<any>, data: any) {\n        if (this.updateState) {\n            return this.updateState(state, { data, meta: { map: {}, meta: {} } });\n        }\n\n        return Object.assign({}, state, { data, meta: { map: {}, meta: {} } });\n    }\n\n    /**\n    * 获取当前state的信息\n    * @param state 当前的state\n    */\n    private getOrigin(state: SchemaFormState<any>): { originData: any; originMeta: any } {\n        if (this.getOriginState) {\n            return this.getOriginState(state);\n        }\n\n        let originData = cloneDeep(state.data);\n        let originMeta = cloneDeep(state.meta);\n\n        return { originData, originMeta };\n    }\n\n    /**\n     * 更改meta的状态\n     *  1. 如果存在meta，则更新meta\n     * @param state 当前的state\n     */\n    private updateMetaStateHandle(state: SchemaFormState<T>,\n        { isLoading, isValid, meta }: { isLoading?: boolean; isValid?: boolean; meta?: any }): SchemaFormState<T> {\n        let { originMeta } = this.getOrigin(state);\n\n        if (meta) {\n            originMeta = meta;\n        }\n\n        if (isLoading !== undefined) {\n            originMeta.isLoading = isLoading;\n        }\n        if (isValid !== undefined) {\n            originMeta.isValid = isValid;\n        }\n\n        if (this.updateState) {\n            return this.updateState(state, { meta: originMeta });\n        }\n\n        return Object.assign({}, state, { meta: originMeta });\n    }\n\n    /**\n     * 更新数据\n     * @param state  state\n     * @param param1 data\n     */\n    private updateItemHandle(state: SchemaFormState<T>,\n        { keys, data, meta }: { keys: Array<string>, data: any, meta: { isValid: boolean } }): SchemaFormState<T> {\n        let { originData } = this.getOrigin(state);\n        let { normalKey } = this.meta.getKey(keys);\n\n        jpp(originData).set(normalKey, data);\n        this.meta.setMeta(keys, meta);\n\n        if (this.updateState) {\n            return this.updateState(state, { data: originData, meta: this.meta.data });\n        }\n\n        return Object.assign({}, state, { data: originData, meta: this.meta.data });\n    }\n\n    private updateMetaHandle(state: SchemaFormState<T>, { keys, meta }: { keys: Array<string>, meta: SchemaFormMeta }) {\n        let { originData } = this.getOrigin(state);\n        let { normalKey } = this.meta.getKey(keys);\n        let curMeta = this.meta.getMeta(keys, false) || {};\n\n        this.meta.setMeta(keys, meta);\n\n        if (this.updateState) {\n            return this.updateState(state, { meta: this.meta.data });\n        }\n\n        return Object.assign({}, state, { meta: this.meta.data });\n    }\n\n    private toggleItemHandle(state: SchemaFormState<T>, { keys }: { keys: Array<string> }): SchemaFormState<T> {\n        let { normalKey } = this.meta.getKey(keys);\n        let curMeta = this.meta.getMeta(keys, false) || {};\n\n        this.meta.setMeta(keys, Object.assign({}, curMeta, { isShow: curMeta.isShow !== undefined ? !curMeta.isShow : false }), false);\n\n        if (this.updateState) {\n            return this.updateState(state, { meta: this.meta.data });\n        }\n\n        return Object.assign({}, state, { meta: this.meta.data });\n    }\n\n    private addItemHandle(state: SchemaFormState<T>, { keys, data }: { keys: Array<string>, data: any }): SchemaFormState<T> {\n        let { originData } = this.getOrigin(state);\n        let { normalKey } = this.meta.getKey(keys);\n        let curData = jpp(originData).has(normalKey) ? jpp(originData).get(normalKey) : [];\n\n        jpp(originData).set(normalKey, [...curData, data]);\n\n        if (this.updateState) {\n            return this.updateState(state, { data: originData });\n        }\n\n        return Object.assign({}, state, { data: originData });\n    }\n\n    private removeItemHandle(state: SchemaFormState<T>, { keys, index }: { index: number, keys: Array<string> }): SchemaFormState<T> {\n        let { originData } = this.getOrigin(state);\n        let { normalKey } = this.meta.getKey([...keys, index.toString()]);\n\n        if (originData && jpp(originData).has(normalKey)) {\n            jpp(originData).remove(normalKey);\n        }\n\n        this.meta.removeMeta([...keys, index.toString()]);\n\n        if (this.updateState) {\n            return this.updateState(state, { data: originData, meta: this.meta.data });\n        }\n\n        return Object.assign({}, state, { data: originData, meta: this.meta.data });\n    }\n\n    private switchItemHandle(state: SchemaFormState<T>,\n        { keys, curIndex, switchIndex }: { curIndex: number; switchIndex: number; keys: Array<string>; }): SchemaFormState<T> {\n        let { originData } = this.getOrigin(state);\n        let { normalKey } = this.meta.getKey(keys);\n        let curData = jpp(originData).get(normalKey);\n\n        [curData[curIndex], curData[switchIndex]] = [curData[switchIndex], curData[curIndex]];\n\n        jpp(originData).set(normalKey, curData);\n        this.meta.switchMeta(keys, curIndex, switchIndex);\n\n        if (this.updateState) {\n            return this.updateState(state, { data: originData, meta: this.meta.data });\n        }\n\n        return Object.assign({}, state, { data: originData, meta: this.meta.data });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/reducer/form.tsx","export { SchemaForm, SchemaFormProps } from \"./components/form\";\nexport { SchemaFormItem, SchemaFormItemProps } from \"./components/formitem\";\nexport { SchemaFormItemBaseProps } from \"./components/formitem/props\";\nexport { FormReducer } from \"./reducer/form\";\nexport { defaultTheme, nsFactory } from \"./factory\";\nexport { RC } from \"./types\";\nexport { default as createForms, SchemaFormCreate } from \"./libs/create\";\nexport {\n    hocFactory,\n    ThemeHocOutProps,\n    FieldHocOutProps,\n    ArrayHocOutProps,\n    MergeHocOutProps,\n    MakeHocOutProps,\n    ValidateHocOutProps\n} from \"./hocs\";\n\nimport jpp from \"json-pointer\";\n\njpp.set = function set(obj, pointer, value) {\n    let refTokens = Array.isArray(pointer) ? pointer : jpp.parse(pointer),\n        nextTok: any = refTokens[0];\n\n    for (let i = 0, n = refTokens.length; i < n - 1; ++i) {\n        let tok: any = refTokens[i];\n        if (tok === \"-\" && Array.isArray(obj)) {\n            tok = obj.length;\n        }\n        nextTok = refTokens[i + 1];\n\n        if (!(tok in obj)) {\n            if (nextTok.match(/^(\\d+|-)$/)) {\n                obj[tok] = [];\n            } else {\n                obj[tok] = {};\n            }\n        }\n\n        if (!obj[tok] && nextTok) {\n            // let keys = refTokens.concat([]).splice(i);\n            obj[tok] = !Number.isNaN(nextTok * 1) ? [] : {};\n        }\n\n        obj = obj[tok];\n    }\n    if (nextTok === \"-\" && Array.isArray(obj)) {\n        nextTok = obj.length;\n    }\n    obj[nextTok] = value;\n\n    return this;\n};\n\n\n// jpp({}).set(\"/a\", 1);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/index.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-act\"\n// module id = 7\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash.clonedeep\"\n// module id = 8\n// module chunks = 0","import { ComponentEnhancer } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { RC } from \"./types\";\nimport { nsFactory } from \"./libs/ns.factory\";\n\nimport hocs from \"./hocs\";\nimport fields from \"./fields\";\nimport { FormReducer } from \"./reducer/form\";\n\nconst defaultTheme = {\n    tempFactory: new BaseFactory<RC<any, any>>(),\n    fieldFactory: new BaseFactory<RC<any, any>>(),\n    widgetFactory: new BaseFactory<RC<any, any>>()\n};\n\nnsFactory.add(\"default\", defaultTheme);\n\nfor (let key in fields) {\n    if (fields.hasOwnProperty(key)) {\n        let field = fields[key];\n\n        defaultTheme.fieldFactory.add(key, field);\n        defaultTheme.fieldFactory.lock(key);\n    }\n}\n\nexport {\n    nsFactory,\n    defaultTheme\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/factory.tsx","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { RC, NsFactory } from \"../types\";\n\nexport class SchemaFormNsFactory extends BaseFactory<NsFactory> {\n    constructor() {\n        super();\n    }\n}\n\nexport const nsFactory = new SchemaFormNsFactory();\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/libs/ns.factory.tsx","import { NormalField } from \"./normal\";\nimport { ObjectField } from \"./object\";\nimport { ArrayField } from \"./array\";\n\nexport default {\n    string: NormalField,\n    boolean: NormalField,\n    number: NormalField,\n    integer: NormalField,\n    null: NormalField,\n    object: ObjectField,\n    array: ArrayField\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/fields/index.tsx","import ajv from \"ajv\";\n\nimport { FormReducer } from \"../reducer/form\";\nimport { MetaData } from \"./meta\";\n\nexport class SchemaFormCreate {\n    public static metas: { [key: string]: MetaData } = {};\n\n    /**\n     * 创建一个schema form reducer\n     * @param key             唯一标志\n     * @param data            数据\n     * @param curJjv          当前的ajv实例\n     * @param schema          当前的json schema\n     * @param updateState     更新state的方法\n     */\n    public createOne<T>(key: string, data: T, curJjv?: ajv.Ajv, schema?: any,\n        getOriginState?: (state: any) => any,\n        updateState?: (state: any, data: any) => any): FormReducer<T> {\n        let meta: MetaData = new MetaData();\n        let defaultValue = (curJjv.validate(schema, data) as Promise<any>).catch(() => 1);\n        let reducer = new FormReducer<T>(updateState ? updateState({}, {\n            data: data,\n            meta: meta.data\n        }) : {\n                data: data,\n                meta: meta.data\n            }, meta, getOriginState, updateState);\n\n        meta.actions = reducer.actions;\n\n        SchemaFormCreate.metas[key] = meta;\n\n        return reducer;\n    }\n}\n\nexport default new SchemaFormCreate();\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/libs/create.tsx","\nimport uuid from \"uuid\";\nimport jpp from \"json-pointer\";\nimport ajv from \"ajv\";\n\n/**\n * 单个meta数据\n */\nexport interface SchemaFormMeta {\n    isShow?: boolean;\n    isLoading?: boolean;\n    dirty?: boolean;\n    isValid?: boolean;\n    errors?: ajv.ErrorObject[];\n    errorText?: string;\n    type?: string;\n}\n\n/**\n * Meta的数据操作类\n */\nexport class MetaData {\n    /**\n     * 数据\n     */\n    public data: {\n        map: any,\n        meta: any;\n        isValid?: boolean;\n        isLoading?: boolean;\n    } = { map: {}, meta: {} };\n    /**\n     * reducer的actions\n     */\n    public actions: any = {};\n    /**\n     * 当前的ajv\n     */\n    private schemaFormOptions: any;\n    /**\n     * 当前的验证key\n     */\n    private curKey: string;\n    /**\n     * 是否初始化\n     */\n    private isInit = false;\n    /**\n     * 初始化一个ajv\n     * @param curAjv ajv的实例\n     * @param key    ajv的schema的key\n     */\n    public init(schemaFormOptions: any, key: string): void {\n        if (this.isInit) {\n            return;\n        }\n        this.isInit = true;\n\n        this.schemaFormOptions = schemaFormOptions;\n        this.curKey = key;\n    }\n    /**\n     * 验证所有的数据\n     * @param data 数据\n     */\n    public async validateAll(data: any): Promise<any> {\n        // 设置所有的字段验证都通过\n        for (let key in this.data.map) {\n            if (this.data.map.hasOwnProperty(key)) {\n                let element = this.data.map[key];\n\n                element.isValid = true;\n                element.dirty = true;\n            }\n        }\n        this.data.isLoading = true;\n        this.data.isValid = false;\n\n        try {\n            let schema = this.schemaFormOptions.ajv.getSchema(this.curKey).schema;\n            let validate = this.schemaFormOptions.ajv.compile(schema);\n\n            // this.schemaFormOptions.ajv.removeSchema\n            // 调用验证方法\n            await validate(data);\n            this.data.isValid = true;\n        } catch (err) {\n            this.data.isValid = false;\n            if (err.errors && err.errors.length) {\n                this.setErrors(err.errors);\n            }\n        }\n\n        return this.data;\n    }\n\n    /**\n     * 设置表单的错误\n     * @param errors 错误详情\n     */\n    public setErrors(errors: ajv.ErrorObject[]) {\n        this.data.isValid = false;\n\n        errors.forEach((error: ajv.ErrorObject) => {\n            let keys = jpp.parse(error.dataPath);\n            let meta = this.getMeta(keys);\n\n            this.setMeta(keys, {\n                dirty: true,\n                isLoading: false,\n                isValid: false,\n                errors: [],\n                errorText: this.schemaFormOptions.ajv.errorsText([error], { separator: \",\", dataVar: \"\" })\n            });\n        });\n    }\n\n    /**\n     * 获得当前字段的key\n     * @param keys    当前字段的Keys\n     */\n    public getKey(keys: Array<string>): { schemaKey: string; originEscapeKey: string; normalKey: string; escapeKey: string; } {\n        const key = jpp.compile(keys);\n        let escapeKey = jpp.escape(key);\n\n        return {\n            schemaKey: keys.map((k: string) => {\n                if (!Number.isNaN(Number(k))) {\n                    return \"-\";\n                }\n                return k;\n            }).join(\"/\"),\n            normalKey: key,\n            originEscapeKey: escapeKey,\n            escapeKey: \"/\" + escapeKey\n        };\n    }\n    /**\n     * 设置meta信息\n     * @param keys     keys\n     * @param meta     meta数据\n     * @param strick   废弃属性\n     */\n    public setMeta(keys: Array<string>, meta: SchemaFormMeta, strick = true): void {\n        let { normalKey, escapeKey, originEscapeKey, schemaKey } = this.getKey(keys);\n        let curUuid = this.getUuid({ normalKey, escapeKey, originEscapeKey, schemaKey });\n        let curMeta = this.getCurMetaData(curUuid);\n\n        if (curUuid !== escapeKey) {\n            this.setCurMetaUuid(normalKey, curUuid);\n        }\n\n        this.setCurMetaData(curUuid, Object.assign({}, curMeta, meta));\n    }\n    /**\n     * 获取当前keys的uuid\n     * @param param0     各种keys\n     */\n    public getUuid({ normalKey, escapeKey, originEscapeKey, schemaKey }): string {\n        let jMap = jpp(this.data.map);\n        let jMeta = jpp(this.data.meta), curMeta, curUuid;\n\n        if (this.schemaFormOptions.map.has(schemaKey)) {\n            let schema = this.schemaFormOptions.map.get(schemaKey);\n\n            if ([\"array\", \"object\"].indexOf(schema.type) >= 0) {\n                return escapeKey;\n            }\n        }\n\n        if (jMap.has(escapeKey)) {\n            return escapeKey;\n        }\n\n        // 如果meta中存在normalKey\n        if (jMeta.has(normalKey)) {\n            curMeta = jMeta.get(normalKey);\n            curUuid = curMeta;\n        }\n\n        if (typeof curMeta !== \"string\" || !curMeta) {\n            curUuid = \"/\" + jpp.escape(`/${uuid()}`);\n        }\n\n        return curUuid;\n    }\n    /**\n     * 返回meta数据\n     * @param keys   keys\n     * @param strick 是否严格模式\n     */\n    public getMeta(keys: Array<string>, strick = true): SchemaFormMeta {\n        let { normalKey, escapeKey, originEscapeKey, schemaKey } = this.getKey(keys);\n        let curUuid = this.getUuid({ normalKey, escapeKey, originEscapeKey, schemaKey });\n\n        return this.getCurMetaData(curUuid);\n    }\n    /**\n     * 更换两个meta数据位置\n     * @param keys        keys\n     * @param curIndex    当前的索引\n     * @param switchIndex 更换的索引\n     */\n    public switchMeta(keys: Array<string>, curIndex: number, switchIndex: number): void {\n        let { normalKey, escapeKey, schemaKey, originEscapeKey } = this.getKey(keys);\n\n        if (!jpp(this.data.meta).has(normalKey)) {\n            return;\n        }\n\n        let curMeta = jpp(this.data.meta).get(normalKey);\n\n        [curMeta[curIndex], curMeta[switchIndex]] = [curMeta[switchIndex], curMeta[curIndex]];\n\n        jpp(this.data.meta).set(normalKey, curMeta);\n    }\n    /**\n     * 删除meta数据\n     *  1. 遍历map，清除map中是${originEscapeKey}开头的key\n     *  2. 清除meta中keys对应的数据，并且遍历meta值中的子元素，清除map中的key\n     *  3. 删除map中当前keys对应的uuid\n     * @param keys keys\n     */\n    public removeMeta(keys: Array<string>): void {\n        let jMap = jpp(this.data.map), jMeta = jpp(this.data.meta);\n        let { normalKey, escapeKey, originEscapeKey, schemaKey } = this.getKey(keys);\n        let curUuid = this.getUuid({ normalKey, escapeKey, originEscapeKey, schemaKey });\n        let regexp = new RegExp(`^${originEscapeKey}`, \"ig\");\n\n        // 遍历map，清除map中是${originEscapeKey}开头的key\n        for (let key in this.data.map) {\n            if (this.data.map.hasOwnProperty(key)) {\n                let mapKeys = this.getKey(jpp.parse(key));\n\n                if (regexp.test(mapKeys.originEscapeKey)) {\n                    jMap.remove(mapKeys.escapeKey);\n                }\n            }\n        }\n\n        // 清除meta中keys对应的数据，并且遍历meta值中的子元素，清除map中的key\n        if (jMeta.has(normalKey) && jMeta.get(normalKey)) {\n            let metaDict = jpp.dict(jMeta.get(normalKey));\n\n            jMeta.remove(normalKey);\n\n            // 遍历子元素，并且清除数据\n            for (let key in metaDict) {\n                if (metaDict.hasOwnProperty(key)) {\n                    let element = metaDict[key];\n\n                    if (jMap.has(element)) {\n                        jMap.remove(element);\n                    }\n                }\n            }\n        }\n\n        // 删除当前的uuid\n        if (jMap.has(curUuid)) {\n            jMap.remove(curUuid);\n        }\n    }\n    /**\n     * 返回meta数据\n     * @param curUuid uuid\n     */\n    private getCurMetaData(curUuid: string): SchemaFormMeta {\n        if (jpp(this.data.map).has(`${curUuid}`)) {\n            return jpp(this.data.map).get(`${curUuid}`);\n        }\n\n        return { isShow: true };\n    }\n\n    /**\n     * 设置meta数据\n     * @param curUuid uuid\n     * @param meta    meta数据\n     */\n    private setCurMetaData(curUuid: string, meta: SchemaFormMeta) {\n        jpp(this.data.map).set(`${curUuid}`, meta);\n    }\n    /**\n     * 设置当前meta的uuid\n     * @param key     key\n     * @param curUuid uuid\n     */\n    private setCurMetaUuid(key: string, curUuid: string) {\n        let jMeta = jpp(this.data.meta);\n\n        jMeta.set(key, curUuid);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/libs/meta.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uuid\"\n// module id = 17\n// module chunks = 0","\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { ComponentEnhancer } from \"recompose\";\n\nimport { MergeHoc, MergeHocOutProps } from \"./form/merge\";\nimport { TempHoc } from \"./item/temp\";\nimport { FieldHoc, FieldHocOutProps } from \"./item/field\";\nimport { ThemeHoc, ThemeHocOutProps } from \"./item/theme\";\nimport { ValidateHoc, ValidateHocOutProps } from \"./item/validate\";\nimport { ArrayHoc, ArrayHocOutProps } from \"./item/array\";\nimport { MakeHoc, MakeHocOutProps } from \"./item/make\";\nimport { ConditionHoc, ConditionHocOutProps } from \"./item/condition\";\n\nconst hocFactory = new BaseFactory<ComponentEnhancer<any, any>>();\n\nconst hocs = {\n    merge: MergeHoc.bind(MergeHoc, hocFactory),\n    temp: TempHoc.bind(TempHoc, hocFactory),\n    field: FieldHoc.bind(FieldHoc, hocFactory),\n    theme: ThemeHoc.bind(ThemeHoc, hocFactory),\n    validate: ValidateHoc.bind(ValidateHoc, hocFactory),\n    array: ArrayHoc.bind(ArrayHoc, hocFactory),\n    make: MakeHoc.bind(MakeHoc, hocFactory),\n    condition: ConditionHoc.bind(ConditionHoc, hocFactory)\n};\n\nfor (let key in hocs) {\n    if (hocs.hasOwnProperty(key)) {\n        let hoc = hocs[key];\n\n        hocFactory.add(key, hoc);\n        hocFactory.lock(key);\n    }\n}\n\nexport {\n    hocFactory,\n    MergeHocOutProps,\n    FieldHocOutProps,\n    ThemeHocOutProps,\n    ValidateHocOutProps,\n    ArrayHocOutProps,\n    MakeHocOutProps\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/hocs/index.tsx"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;AC7DA;;;;;;ACAA;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAoBA;AAkCA;;;;;;AAMA;AACA;AACA;AACA;AACA;AA3CA;;;AAGA;AACA;;;AAGA;AACA;;;AAGA;AACA;;;AAGA;AACA;;;AAGA;AACA;;;AAGA;AACA;;;AAGA;AACA;;;AAGA;AAYA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;;;;AAKA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;;;;;AAKA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;AC1PA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAUA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;ACtDA;;;;;;ACAA;;;;;;;ACCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AAGA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;ACxBA;AAAA;AAAA;AAIA;AACA;AACA;AACA;;;;AAGA;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AAEA;AAGA;;;;;;;;AAQA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAKA;AAEA;AAEA;AACA;;;;AA5BA;AA+BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AAgBA;;;AAGA;AAAA;AACA;;;AAGA;AAMA;;;AAGA;AASA;;;AAGA;AAuPA;AAtPA;;;;;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AAIA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;;;;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAEA;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;;;;;;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;AAKA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAMA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;AAOA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;;;;;AAKA;AACA;AAEA;AACA;;;;;;;;;ACpSA;;;;;;;ACCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}