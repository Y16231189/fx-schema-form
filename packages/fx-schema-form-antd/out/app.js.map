{"version":3,"sources":["/src/demo.tsx","/src/index.tsx","/src/components/form/index.tsx","/src/components/form/container.tsx","/src/components/form/hocs/merge.tsx","/src/components/meta.tsx","/src/components/formitem/index.tsx","/src/components/formitem/container.tsx","/src/components/formitem/hocs/temp.tsx","/src/components/formitem/hocs/field.tsx","/src/components/formitem/hocs/theme.tsx","/src/components/formitem/hocs/validate.tsx","/src/libs/validate.tsx","/src/components/formitem/hocs/array.tsx","/src/libs/ns.factory.tsx","/src/hocs/index.tsx","/src/hocs/data.tsx","/src/fields/index.tsx","/src/fields/string.tsx","/src/fields/object.tsx","/src/fields/array.tsx","/src/templates/index.tsx","/src/templates/formitem.tsx","/src/templates/col.tsx","/src/templates/row.tsx","/src/templates/card.tsx","/src/widgets/index.tsx","/src/widgets/input.tsx","/src/widgets/checkbox.tsx","/src/widgets/switch.tsx","/src/libs/create.tsx","/src/reducer/form.tsx","packages/fusebox-hot-reload@0.0.0","packages/fuse-heresy-default@0.0.0","packages/fusebox-websocket@0.0.0","packages/events@0.0.0"],"names":[],"mappings":"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":"","sourcesContent":["import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { Card, Button, Form } from \"antd\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport { SchemaForm, createForms } from \"./index\";\n\nconst schema = {\n    type: \"object\",\n    title: \"测试SCHEMA\",\n    required: [\"array\", \"name\"],\n    properties: {\n        name: { type: \"string\", \"title\": \"昵称\", \"default\": \"nora\", description: \"昵称，必填\" },\n        number: { type: \"number\", \"title\": \"测试number类型\" },\n        integer: { type: \"integer\", \"title\": \"测试integer类型\" },\n        boolean: { type: \"boolean\", \"title\": \"测试boolean类型\", default: true },\n        array: { type: \"array\", items: { type: \"string\", \"title\": \"测试array类型ITEM\", minLength: 3 }, \"title\": \"测试array类型\" },\n        object: {\n            type: \"object\",\n            properties: {\n                settings: { type: \"boolean\", default: true }\n            }\n        },\n        array1: {\n            type: \"array\",\n            title: \"测试无限极数组类型\",\n            items: {\n                type: \"object\",\n                properties: {\n                    test: { type: \"string\", title: \"无限极测试数据\" },\n                    children: { $ref: \"test#/properties/array1\" }\n                }\n            }\n        },\n        null: { type: \"null\", \"title\": \"测试null类型\" },\n        muti: { type: [\"string\", \"integer\", \"number\"], \"title\": \"测试多类型\" }\n    }\n};\n\nconst uiSchema = [{\n    \"key\": \"array\",\n    \"items\": [{\n        \"key\": \"array/-\",\n        // \"ui:temp\": []\n    }]\n}, {\n    \"key\": \"array1\"\n}];\n\nconst globalOptions = {\n    \"ui:temp\": [\"formItem\"],\n    \"formItem\": {\n        \"labelCol\": {\n            \"xs\": { \"span\": 24 },\n            \"sm\": { \"span\": 6 },\n        },\n        \"wrapperCol\": {\n            \"xs\": { \"span\": 24 },\n            \"sm\": { \"span\": 14 },\n        },\n    },\n    \"row\": {\n        \"type\": \"flex\"\n    },\n    \"col\": {\n        \"xs\": { \"span\": 24, \"offset\": 24 },\n        \"sm\": { \"span\": 24, \"offset\": 0 },\n    },\n    \"array\": {\n        \"ui:temp\": [\"row\", \"col\", \"card\"]\n    }\n};\n\nlet store = createStore(combineReducers(createForms({\n    \"test\": { name: \"nick\" }\n})));\n\nstore.subscribe(() => {\n    console.log(store.getState());\n});\nReactDom.render(\n    <Provider store={store}>\n        <SchemaForm schemaKey={\"test\"} schema={schema} RootComponent={Form} uiSchema={uiSchema} globalOptions={globalOptions}>\n            <Button>dfadf</Button>\n        </SchemaForm>\n    </Provider>\n    , document.getElementById(\"root\"), console.log);\n","import { ComponentEnhancer } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { SchemaForm } from \"./components/form\";\nimport { SchemaFormItem } from \"./components/formitem\";\nimport { RC } from \"./types\";\nimport { nsFactory } from \"./libs/ns.factory\";\n\nimport hocs from \"./hocs\";\nimport fields from \"./fields\";\nimport templates from \"./templates\";\nimport widgets from \"./widgets\";\n\nconst defaultTheme = {\n    tempFactory: new BaseFactory<RC<any, any>>(),\n    fieldFactory: new BaseFactory<RC<any, any>>(),\n    widgetFactory: new BaseFactory<RC<any, any>>(),\n    hocFactory: new BaseFactory<ComponentEnhancer<any, any>>(),\n};\n\nnsFactory.add(\"default\", defaultTheme);\n\nfor (let key in fields) {\n    if (fields.hasOwnProperty(key)) {\n        let field = fields[key];\n\n        defaultTheme.fieldFactory.add(key, field);\n        defaultTheme.fieldFactory.lock(key);\n    }\n}\n\nfor (let key in widgets) {\n    if (widgets.hasOwnProperty(key)) {\n        let widget = widgets[key];\n\n        defaultTheme.widgetFactory.add(key, widget);\n    }\n}\n\nfor (let key in hocs) {\n    if (hocs.hasOwnProperty(key)) {\n        let hoc = hocs[key];\n\n        defaultTheme.hocFactory.add(key, hoc);\n        defaultTheme.hocFactory.lock(key);\n    }\n}\n\nfor (let key in templates) {\n    if (templates.hasOwnProperty(key)) {\n        let template = templates[key];\n\n        defaultTheme.tempFactory.add(key, template);\n        defaultTheme.tempFactory.lock(key);\n    }\n}\n\nexport { default as createForms } from \"./libs/create\";\n\nexport {\n    nsFactory,\n    SchemaForm,\n    SchemaFormItem,\n    defaultTheme\n};\n","import React from \"react\";\nimport { EventEmitter2 } from \"eventemitter2\";\n\nimport { SchemaFormBaseProps } from \"./props\";\nimport { hoc } from \"./container\";\nimport { SchemaFormItem } from \"../../index\";\nimport { MergeHocOutProps } from \"./hocs/merge\";\n\nclass SchemaFormBlock extends React.Component<any, any> {\n    public render(): JSX.Element {\n        return <div>{this.props.children}</div>;\n    }\n}\n\nexport interface SchemaFormProps extends SchemaFormBaseProps {\n\n}\n\n/**\n * SchemaForm组件\n * 通过schema和uiSchea生成表单元素\n */\nclass SchemaFormComponent extends React.Component<SchemaFormProps & MergeHocOutProps, any> {\n    public render(): JSX.Element {\n        const { children, mergeSchemaList, schemaKey, formData,\n            arrayItems, arrayIndex, globalOptions, RootComponent, schemaFormOptions\n        } = this.props;\n        let RootComponentHock = RootComponent;\n\n        // 计算顶部容器，如果有RootComponent，则使用，否则使用默认的容器组件\n        if (!RootComponentHock) {\n            RootComponentHock = SchemaFormBlock;\n        }\n\n        schemaFormOptions.ajv.validate(schemaKey, formData);\n\n        return (\n            <RootComponentHock>\n                {\n                    mergeSchemaList.map((mergeSchema: any, idx: number) => {\n                        let find = false;\n\n                        if (typeof arrayIndex === \"number\") {\n                            mergeSchema.keys = mergeSchema.keys.map((key: string) => {\n                                if (find) {\n                                    return key;\n                                }\n\n                                if (key === \"-\") {\n                                    return arrayIndex;\n                                }\n\n                                return key;\n                            });\n                        }\n                        return <SchemaFormItem\n                            key={`${schemaKey}-${idx.toString()}`}\n                            schemaKey={schemaKey}\n                            arrayIndex={arrayIndex}\n                            arrayItems={arrayItems}\n                            mergeSchemaList={mergeSchemaList}\n                            mergeSchema={mergeSchema}\n                            schemaFormOptions={schemaFormOptions}\n                            globalOptions={globalOptions}>\n                        </SchemaFormItem>;\n                    })\n                }\n                {children}\n            </RootComponentHock>\n        );\n    }\n}\n\nexport const SchemaForm = hoc(SchemaFormComponent);\n","import { compose, withHandlers, ComponentEnhancer, lifecycle } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport { SchemaFormProps } from \"./props\";\nimport { MergeHoc } from \"./hocs/merge\";\n\nexport const mapStateToProps = (state: any, ownProps: any) => {\n    return {\n        formData: state[ownProps.schemaKey]\n    };\n};\n\nexport const hoc: ComponentEnhancer<SchemaFormProps, any> = compose<SchemaFormProps, any>(\n    MergeHoc\n);\n","\nimport React from \"react\";\nimport { merge } from \"fx-schema-form-core\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { compose, shouldUpdate } from \"recompose\";\n\nimport { RC } from \"../../../types\";\nimport { SchemaFormBaseProps } from \"../props\";\nimport { mapActionsStateToProps } from \"../../meta\";\n\n/**\n * MergeHoc 添加的属性\n */\nexport interface MergeHocOutProps {\n    schemaFormOptions: any;\n    mergeSchemaList: any;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>, ownProps: SchemaFormBaseProps) => {\n    const { actions, schemaFormOptions } = ownProps;\n\n    for (const key in actions) {\n        if (actions.hasOwnProperty(key)) {\n            const element = actions[key];\n\n            if (!element.assigned(dispatch)) {\n                element.assignTo(dispatch);\n            }\n        }\n    }\n\n    return { actions };\n};\n\n\n/**\n * merge参数中的schema和uiSchema，生成新的对象mergeSchemaList，传入组件的props中\n * @param Component 需要包装的组件\n * 加入属性\n * schemaFormOptions  merge只有，返回的options\n * schemaKey          生成的schemaKey\n * mergeSchemaList    合并之后的数据\n */\nexport const MergeHoc = (Component: RC<any, any>): RC<SchemaFormBaseProps, any> => {\n    @(compose<SchemaFormBaseProps, any>(\n        connect(mapActionsStateToProps),\n        connect(null, mapDispatchToProps)\n    ) as any)\n    class Hoc extends React.Component<SchemaFormBaseProps, any> {\n        public render(): JSX.Element {\n            let { schema, uiSchema, globalOptions, parentKeys, schemaFormOptions, schemaKey, actions } = this.props, mergeSchemaList;\n\n            if (!schemaKey) {\n                schemaKey = (Date.now() + Math.random()).toString();\n            }\n\n            schemaFormOptions = schemaFormOptions || {};\n            schemaFormOptions.parentKeys = parentKeys || [];\n\n            mergeSchemaList = merge(schemaKey, schema, uiSchema, schemaFormOptions);\n\n            return (\n                <Component\n                    schemaFormOptions={schemaFormOptions || {}}\n                    schemaKey={schemaKey}\n                    mergeSchemaList={mergeSchemaList}\n                    {...this.props}>\n                </Component>);\n        }\n    }\n\n    return Hoc;\n};\n","\nimport React from \"react\";\nimport { connect, Dispatch } from \"react-redux\";\nimport *  as jpp from \"json-pointer\";\nimport { createSelector } from \"reselect\";\n\nimport { SchemaFormItemBaseProps } from \"./formitem/props\";\n\nexport const getAllData = (state: any, props: SchemaFormItemBaseProps) => {\n    let { data = {} } = state[props.schemaKey];\n\n    return data;\n};\n\n/**\n * 获取state中的meta数据\n * @param state 全局state\n * @param props 当前component的props\n */\nexport const getData = (state: any, props: SchemaFormItemBaseProps) => {\n    const { schemaKey, mergeSchema } = props;\n    const { keys = [] } = mergeSchema;\n    let { data = {} } = state[props.schemaKey];\n\n    return jpp.has(data, jpp.compile(keys)) ? jpp.get(data, jpp.compile(keys)) : undefined;\n};\n\n/**\n * 获取state中的meta数据\n * @param state 全局state\n * @param props 当前component的props\n */\nexport const getMetaData = (state: any, props: SchemaFormItemBaseProps) => {\n    const { schemaKey, mergeSchema } = props;\n    const { keys = [] } = mergeSchema;\n    let { meta = {} } = state[props.schemaKey];\n\n    return jpp.has(meta, jpp.compile(keys)) ? jpp.get(meta, jpp.compile(keys)) : { dirty: false };\n};\n\n/**\n * 获取state中的meta数据中的actions\n * @param state 全局state\n * @param props 当前component的props\n */\nexport const getActions = (state: any, props: SchemaFormItemBaseProps) => {\n    const { schemaKey } = props;\n    const { data = {}, meta = { actions: {} } } = state[schemaKey];\n\n    return meta.actions;\n};\n\nexport const mapMetaStateToProps = createSelector(\n    [getMetaData, getData, getAllData],\n    (meta: any, formItemData: any, formData: any) => {\n        return { meta, formData, formItemData };\n    }\n);\n\nexport const mapActionsStateToProps = createSelector(\n    [getActions],\n    (actions: any) => {\n        return { actions };\n    }\n);\n","import React from \"react\";\nimport { compose } from \"recompose\";\n\nimport { SchemaFormItemBaseProps } from \"./props\";\nimport { hoc } from \"./container\";\nimport { FieldHocOutProps } from \"./hocs/field\";\nimport { ThemeHocOutProps } from \"./hocs/theme\";\nimport { ValidateHocOutProps } from \"./hocs/validate\";\n\nexport interface SchemaFormItemProps extends SchemaFormItemBaseProps, FieldHocOutProps, ThemeHocOutProps, ValidateHocOutProps {\n\n}\n\n/**\n * SchemaFormItem组件\n * 找到对应的field组件，渲染\n */\nclass SchemaFormItemComponent extends React.Component<SchemaFormItemProps, any> {\n    public render(): JSX.Element | null {\n        const { FieldComponent, mergeSchema } = this.props;\n        const { uiSchema = {} } = mergeSchema;\n\n        if (!FieldComponent) {\n            console.log(mergeSchema, \"没有找到匹配的field\");\n            return null;\n        }\n\n        return <FieldComponent {...this.props} />;\n    }\n}\n\nexport const SchemaFormItem = hoc(SchemaFormItemComponent);\n","import { compose, ComponentEnhancer, lifecycle, onlyUpdateForKeys, shouldUpdate, shallowEqual } from \"recompose\";\nimport pick from \"recompose/utils/pick\";\n\nimport { SchemaFormItemBaseProps } from \"./props\";\nimport { TempHoc } from \"./hocs/temp\";\nimport { FieldHoc } from \"./hocs/field\";\nimport { ThemeHoc } from \"./hocs/theme\";\nimport { ValidateHoc } from \"./hocs/validate\";\nimport { ArrayHoc } from \"./hocs/array\";\n\nexport const hoc: ComponentEnhancer<SchemaFormItemBaseProps, any> = compose<SchemaFormItemBaseProps, any>(\n    onlyUpdateForKeys([\"formData\", \"meta\"]),\n    ThemeHoc,\n    FieldHoc,\n    ValidateHoc,\n    ArrayHoc,\n    TempHoc,\n    shouldUpdate<SchemaFormItemBaseProps>((prevProps: SchemaFormItemBaseProps, nextProps: SchemaFormItemBaseProps): boolean => {\n        return !shallowEqual(pick(prevProps, [\"formData\"]).formData, pick(nextProps, [\"formData\"]).formData) ||\n            !shallowEqual(pick(prevProps, [\"meta\"]).meta, pick(nextProps, [\"meta\"]).meta);\n    })\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as jpp from \"json-pointer\";\nimport { shallowEqual, compose, shouldUpdate, onlyUpdateForKeys, lifecycle } from \"recompose\";\nimport pick from \"recompose/utils/pick\";\n\nimport { RC } from \"../../../types\";\nimport { ThemeHocOutProps } from \"./theme\";\nimport { SchemaFormItemBaseProps } from \"../props\";\nimport { ValidateHoc } from \"./validate\";\nimport { mapMetaStateToProps } from \"../../meta\";\n\nconst metaConnect = compose<SchemaFormItemBaseProps & ThemeHocOutProps, any>(\n    lifecycle({\n        shouldComponentUpdate: function (nextProps: SchemaFormItemBaseProps, nextState) {\n            console.group(nextProps.mergeSchema.keys + \"---temp中比较formItemData和Meta的值得变化\");\n            console.log(\"formItemData\", pick(nextProps, [\"formItemData\"]), pick(this.props, [\"formItemData\"]));\n            console.log(\"meta\", pick(nextProps, [\"meta\"]), pick(this.props, [\"meta\"]));\n            console.groupEnd();\n\n            return !shallowEqual(pick(nextProps, [\"formItemData\"]).formItemData, pick(this.props, [\"formItemData\"]).formItemData) ||\n                !shallowEqual(pick(nextProps, [\"meta\"]).meta, pick(this.props, [\"meta\"]).meta);\n        }\n    })\n);\n\n/**\n * 包装Template的组件HOC\n * @param Component 需要包装的组件\n * @param options   参数\n */\nexport const TempHoc = (Component: any): RC<SchemaFormItemBaseProps & ThemeHocOutProps, any> => {\n\n    /**\n    * 获取模板的components\n    * @param uiSchema 合并后的数据\n    */\n\n    @(metaConnect as any)\n    class Hoc extends React.Component<SchemaFormItemBaseProps & ThemeHocOutProps, any> {\n        private tempField = \"ui:temp\";\n\n        public componentDidMount(): void {\n            console.log(\"temp mounted!\");\n        }\n        public render(): JSX.Element {\n            const { mergeSchema, globalOptions } = this.props;\n            const { uiSchema = { options: {} }, keys } = mergeSchema;\n            const TempComponents = this.getTemplates();\n            const uiSchemaOptions = uiSchema.options || {};\n            let index = 0;\n\n            return TempComponents.reduce((prev: JSX.Element, { key, Temp }) => {\n                return <Temp\n                    globalOptions={globalOptions}\n                    tempKey={key}\n                    uiSchemaOptions={uiSchemaOptions}\n                    key={keys.join(\".\") + key + index++}\n                    {...this.props}>\n                    {prev}\n                </Temp>;\n            }, <Component key={keys.join(\".\")} uiSchemaOptions={uiSchemaOptions} {...this.props}></Component>);\n        }\n\n        /**\n        * 获取模板的components\n        */\n        private getTemplates(): Array<{ key: string, Temp: RC<any, any> }> {\n            const { mergeSchema, globalOptions, currentTheme } = this.props;\n            const { uiSchema = { options: {} }, keys, type } = mergeSchema;\n            const typeDefaultOptions = globalOptions[type] || {};\n            const template = uiSchema[this.tempField] ||\n                typeDefaultOptions[this.tempField] ||\n                globalOptions[this.tempField] || \"default\",\n                TempComponent = [];\n\n            // 获取模板的数据，单个模板\n            if (typeof template === \"string\") {\n                TempComponent.push({\n                    key: template,\n                    Temp: (currentTheme.tempFactory.get(template))\n                });\n            } else {\n                // 多个模板\n                [].concat(template).reverse().forEach((tml, idx) => {\n                    if (!currentTheme.tempFactory.has(tml || \"default\")) {\n                        console.error(`不存在${tml}的temp！`);\n                    } else {\n                        TempComponent.push({\n                            key: tml,\n                            Temp: currentTheme.tempFactory.get(tml || \"default\")\n                        });\n                    }\n                });\n            }\n\n            return TempComponent;\n        }\n    }\n\n    return Hoc;\n};\n","\nimport React from \"react\";\nimport { compose } from \"recompose\";\n\nimport { RC } from \"../../../types\";\nimport { nsFactory } from \"../../../index\";\nimport { ThemeHocOutProps } from \"./theme\";\nimport { SchemaFormItemBaseProps } from \"../props\";\n\nexport interface FieldHocOutProps {\n    FieldComponent: RC<any, any>;\n    WidgetComponent: RC<any, any>;\n}\n\n/**\n * 包装Field的组件HOC\n * @param Component 需要包装的组件\n * 加入属性FieldComponent   schema对应的fieldcomponent\n * 加入属性WidgetComponent  schema对应的widgetcomponent\n */\nexport const FieldHoc = (Component: any): RC<SchemaFormItemBaseProps & ThemeHocOutProps, any> => {\n    class Hoc extends React.Component<SchemaFormItemBaseProps & ThemeHocOutProps, any> {\n        public shouldComponentUpdate() {\n            return false;\n        }\n\n        public render(): JSX.Element {\n            const { mergeSchema, currentTheme } = this.props;\n            const { uiSchema = { theme: \"\", field: \"\", widget: \"\" } } = mergeSchema;\n            let FieldComponent, WidgetComponent;\n\n            if (currentTheme.fieldFactory.has(uiSchema.field || mergeSchema.type)) {\n                FieldComponent = currentTheme.fieldFactory.get(uiSchema.field || mergeSchema.type);\n            }\n\n            if (currentTheme.widgetFactory.has(uiSchema.widget || mergeSchema.type)) {\n                WidgetComponent = currentTheme.widgetFactory.get(uiSchema.widget || mergeSchema.type);\n            }\n\n            return <Component {...this.props}\n                FieldComponent={(FieldComponent)}\n                WidgetComponent={WidgetComponent} />;\n        }\n    }\n\n    return Hoc;\n};\n","\nimport React from \"react\";\n\nimport { RC, NsFactory } from \"../../../types\";\nimport { nsFactory } from \"../../../index\";\nimport { SchemaFormItemBaseProps } from \"../props\";\n\nexport interface ThemeHocOutProps {\n    currentTheme: NsFactory;\n}\n\n/**\n * 包装theme的组件HOC\n * @param Component 需要包装的组件\n * @param options   参数\n * 加入属性\n * currentTheme 当前的命名空间\n */\nexport const ThemeHoc = (Component: any): RC<SchemaFormItemBaseProps, any> => {\n    class Hoc extends React.Component<SchemaFormItemBaseProps, any> {\n        public render(): JSX.Element {\n            const { mergeSchema } = this.props;\n            const { uiSchema = { theme: \"\", field: \"\" } } = mergeSchema;\n            let theme;\n\n            if (nsFactory.has(uiSchema.theme || \"default\")) {\n                theme = nsFactory.get(uiSchema.theme || \"default\");\n            } else {\n                throw new Error(`没有找到￥{uiSchema.theme || \"default\"}的样式！`);\n            }\n\n            return <Component currentTheme={theme} {...this.props} />;\n        }\n    }\n\n    return Hoc;\n};\n","\nimport React from \"react\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { compose, shouldUpdate } from \"recompose\";\nimport *  as jpp from \"json-pointer\";\n\nimport { SchemaFormItemBaseProps } from \"../props\";\nimport { RC } from \"../../../types\";\nimport validateFunc from \"../../../libs/validate\";\nimport { mapActionsStateToProps } from \"../../meta\";\n\n\nexport interface ValidateHocOutProps {\n    validate?: (data: any) => void;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>, ownProps: SchemaFormItemBaseProps & { actions: any }) => {\n    const { mergeSchema, actions, schemaFormOptions } = ownProps;\n    const { keys } = mergeSchema;\n\n    for (const key in actions) {\n        if (actions.hasOwnProperty(key)) {\n            const element = actions[key];\n\n            if (!element.assigned(dispatch)) {\n                element.assignTo(dispatch);\n            }\n        }\n    }\n\n    return {\n        validate: (data: any) => {\n            if (!actions.updateItem) {\n                console.error(\"没有更新的action！\");\n            }\n            actions.updateItem({ keys, data, meta: validateFunc(mergeSchema, schemaFormOptions.ajv, data) });\n        }\n    };\n};\n\n/**\n * 包装theme的组件HOC\n * @param Component 需要包装的组件\n * @param options   参数\n * 加入属性\n * currentTheme 当前的命名空间\n */\nexport const ValidateHoc = (Component: any): RC<SchemaFormItemBaseProps, any> => {\n    class Hoc extends React.Component<SchemaFormItemBaseProps, any> {\n        public render(): JSX.Element {\n            const ComponentWithHoc = compose(\n                connect(mapActionsStateToProps),\n                connect(null, mapDispatchToProps),\n                shouldUpdate(\n                    (props, nextProps) => {\n                        return false;\n                    }\n                )\n            )(Component);\n\n            return <ComponentWithHoc {...this.props} />;\n        }\n    }\n\n    return Hoc;\n};\n","import { Ajv } from \"ajv\";\n\nexport default (mergeSchema: any, ajv: Ajv, value: any) => {\n    // string类型，类似input，textarea会返回一个空字符串\n    // 如果是空，tv4验证的时候会返回成功\n    // 这时候会违反\"required\"的验证规则,所以需要做处理\n    if (value === \"\") {\n        value = undefined;\n    }\n\n    // number类型会返回一个null的数据，这里需要做处理\n    if (mergeSchema.type === \"number\" && value === undefined) {\n        value = undefined;\n    }\n\n    // array类型会返回一个null的数据，这里需要做处理\n    if (mergeSchema.type === \"array\" && !value) {\n        value = [];\n    }\n\n    // JSON Schema的第四版本的${REQUIRED}字段不是配置在他同级的json里面\n    // 所以我们需要自定义验证JSON\n    let wrap = { type: \"object\", \"properties\": {}, required: undefined };\n    let propName = mergeSchema.keys[mergeSchema.keys.length - 1];\n\n    wrap.properties[propName] = mergeSchema;\n    if (mergeSchema.isRequired) {\n        wrap.required = [propName];\n    }\n\n    let valueWrap = {};\n\n    if (value !== undefined && value != null) {\n        valueWrap[propName] = value;\n    }\n\n    let isValid = ajv.validate(wrap, valueWrap);\n\n    return {\n        dirty: true,\n        isValid: isValid,\n        errors: [].concat(ajv.errors || []),\n        errorText: ajv.errorsText(ajv.errors, {})\n    };\n};\n","\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { RC, NsFactory } from \"../../../types\";\nimport { nsFactory } from \"../../../index\";\nimport { SchemaFormItemBaseProps } from \"../props\";\nimport { ValidateHocOutProps } from \"./validate\";\nimport { mapMetaStateToProps } from \"../../meta\";\n\nexport interface ArrayHocOutProps {\n}\n\n/**\n * 包装array的组件HOC\n * @param Component 需要包装的组件\n * @param options   参数\n * 加入属性\n * arrayItems\n */\nexport const ArrayHoc = (Component: any): RC<SchemaFormItemBaseProps & ValidateHocOutProps, any> => {\n    @(connect(mapMetaStateToProps) as any)\n    class Hoc extends React.Component<SchemaFormItemBaseProps & ValidateHocOutProps, any> {\n        public render(): JSX.Element {\n            const { mergeSchema, arrayIndex } = this.props;\n            const { uiSchema, type, keys } = mergeSchema;\n\n            if (type === \"array\") {\n                return <Component {...this.props} arrayItems={[\n                    <button key={keys.join(\".\") + \"arraybutton\" + 1} onClick={() => {\n                        this.addItem();\n                    }}>add</button>\n                ]} arrayItemItems={[\n                    <button key={keys.join(\".\") + \"arraybutton\" + 1} onClick={() => {\n                        this.addItem();\n                    }}>add</button>,\n                    <button key={keys.join(\".\") + \"arraybutton\" + 2} onClick={() => {\n                        this.removeItem(arrayIndex);\n                    }}>remove</button>\n                ]}/>;\n            }\n\n            // if (arrayIndex !== undefined) {\n            //     return <Component  {...this.props} arrayItems={[\n            //         <button key={keys.join(\".\") + \"arraybutton\" + 1} onClick={() => {\n            //             this.addItem();\n            //         }}>add</button>,\n            //         <button key={keys.join(\".\") + \"arraybutton\" + 2} onClick={() => {\n            //             this.removeItem(arrayIndex);\n            //         }}>remove</button>\n            //     ]} />;\n            // }\n\n            return <Component {...this.props} />;\n        }\n\n        /**\n         * 移除一个数据项\n         * @param index 数组索引\n         */\n        private removeItem(index: number): void {\n            const { formItemData = [], mergeSchema, validate } = this.props;\n            const { uiSchema, type, keys } = mergeSchema;\n\n            if (type === \"array\") {\n                formItemData.splice(index, 1);\n                validate(formItemData);\n            }\n\n\n        }\n\n        /**\n         * 添加一个项目\n         */\n        private addItem(): void {\n            let { formItemData = [], mergeSchema, validate } = this.props;\n\n            if (mergeSchema.items.type === \"object\") {\n                formItemData.push({});\n            } else {\n                formItemData.push(undefined);\n            }\n\n            validate(formItemData);\n        }\n    }\n\n    return Hoc;\n};\n","import React from \"react\";\nimport { BaseFactory, merge } from \"fx-schema-form-core\";\n\nimport { RC, NsFactory } from \"../types\";\n\nexport class SchemaFormNsFactory extends BaseFactory<NsFactory> {\n    constructor() {\n        super();\n    }\n}\n\nexport const nsFactory = new SchemaFormNsFactory();\n","\nimport { DataHoc } from \"./data\";\n\nexport default {\n    data: DataHoc\n};\n","\nimport React from \"react\";\nimport { connect, Dispatch } from \"react-redux\";\nimport *  as jpp from \"json-pointer\";\nimport { createSelector } from \"reselect\";\n// import { } from \"react-act\";\n\nimport { SchemaFormItemProps } from \"../components/formitem\";\nimport { RC } from \"../types\";\n\n\nconst getData = (state: any, props: SchemaFormItemProps) => {\n    const { schemaKey, mergeSchema } = props;\n    const { keys = [] } = mergeSchema;\n    let { data = {}, meta = {} } = state[props.schemaKey];\n\n    return jpp.has(data, jpp.compile(keys)) ? jpp.get(data, jpp.compile(keys)) : undefined;\n};\n\nconst getMetaData = (state: any, props: SchemaFormItemProps) => {\n    const { schemaKey, mergeSchema } = props;\n    const { keys = [] } = mergeSchema;\n    let { meta = {} } = state[props.schemaKey];\n\n    return jpp.has(meta, jpp.compile(keys)) ? jpp.get(meta, jpp.compile(keys)) : { dirty: false };\n};\n\nconst mapStateToProps = createSelector(\n    [getData, getMetaData],\n    (formData: any, meta: any) => {\n        return { formData, meta };\n    }\n);\n\n/**\n * 包装theme的组件HOC\n * @param Component 需要包装的组件\n * @param options   参数\n * 加入属性\n * currentTheme 当前的命名空间\n */\nexport const DataHoc = (Component: any): RC<SchemaFormItemProps, any> => {\n    class Hoc extends React.Component<SchemaFormItemProps, any> {\n        public render(): JSX.Element {\n            const ComponentWithHoc = connect(mapStateToProps)(Component);\n\n            console.log(\"data hoc rendred\");\n\n            return <ComponentWithHoc {...this.props} />;\n        }\n    }\n\n    return Hoc;\n};\n","import { StringField } from \"./string\";\nimport { ObjectField } from \"./object\";\nimport { ArrayField } from \"./array\";\n\nexport default {\n    string: StringField,\n    boolean: StringField,\n    number: StringField,\n    integer: StringField,\n    object: ObjectField,\n    array: ArrayField\n};\n","import React from \"react\";\n\nimport { RC } from \"../types\";\nimport { SchemaFormItemProps } from \"../components/formitem\";\n\nexport interface StringFieldProps extends SchemaFormItemProps {\n\n}\n\nexport class StringField extends React.Component<StringFieldProps, any> {\n    public render(): JSX.Element {\n        const { mergeSchema, currentTheme, WidgetComponent } = this.props;\n\n        return (\n            <WidgetComponent key={mergeSchema.keys.join(\".\")} {...this.props} />\n        );\n    }\n}\n","import React from \"react\";\n\nimport { RC } from \"../types\";\nimport { SchemaForm } from \"../index\";\nimport { SchemaFormItemProps } from \"../components/formitem\";\n\nexport interface ObjectFieldProps extends SchemaFormItemProps {\n\n}\n\nexport class ObjectField extends React.Component<ObjectFieldProps, any> {\n    public render(): JSX.Element {\n        const { mergeSchema, currentTheme, WidgetComponent, globalOptions, schemaFormOptions, schemaKey } = this.props;\n        const { uiSchema } = mergeSchema;\n\n        return (\n            <SchemaForm\n                schemaFormOptions={schemaFormOptions}\n                schemaKey={schemaKey}\n                schema={mergeSchema}\n                parentKeys={mergeSchema.keys}\n                RootComponent={uiSchema.root}\n                uiSchema={uiSchema.items || [\"*\"]}\n                globalOptions={globalOptions}>\n            </SchemaForm>\n        );\n    }\n}\n","import React from \"react\";\nimport { Card, Button, Form } from \"antd\";\n\nimport { RC } from \"../types\";\nimport { nsFactory, SchemaForm } from \"../index\";\nimport { SchemaFormItemProps } from \"../components/formitem\";\n\nexport interface ArryFieldProps extends SchemaFormItemProps {\n\n}\n\nexport class ArrayField extends React.Component<ArryFieldProps, any> {\n    /**\n     * 遍历数据，生成子表单\n     * @param idx 数组的索引\n     */\n    private renderItem(idx: number): JSX.Element {\n        const { mergeSchema, schemaKey, globalOptions, schemaFormOptions, arrayItems, arrayItemItems } = this.props;\n        const { uiSchema, keys } = mergeSchema;\n\n        return (\n            <SchemaForm\n                key={keys.join(\".\") + idx}\n                schema={mergeSchema}\n                arrayIndex={idx}\n                arrayItems={arrayItemItems}\n                parentKeys={mergeSchema.keys}\n                RootComponent={null}\n                schemaKey={schemaKey}\n                uiSchema={uiSchema.items}\n                schemaFormOptions={schemaFormOptions}\n                globalOptions={globalOptions}>\n            </SchemaForm>\n        );\n    }\n\n    /**\n     * 渲染页面\n     */\n    public render(): JSX.Element | null {\n        const { mergeSchema, currentTheme, WidgetComponent, schemaKey, globalOptions, schemaFormOptions, formItemData,\n            meta = { dirty: false, isValid: true }\n        } = this.props;\n        const { uiSchema, title } = mergeSchema;\n\n        let child = formItemData && formItemData.map((data: any, idx: number) => {\n            return this.renderItem(idx);\n        });\n\n        return <div>{child || null}</div>;\n    }\n\n    // private removeItem(index: number): void {\n    //     let { formData = [], mergeSchema, validate } = this.props;\n\n    //     formData.splice(index, 1);\n\n    //     validate(formData);\n    // }\n\n    // private addItem(): void {\n    //     let { formData = [], mergeSchema, validate } = this.props;\n\n    //     if (mergeSchema.items.type === \"object\") {\n    //         formData.push({});\n    //     } else {\n    //         formData.push(undefined);\n    //     }\n\n    //     validate(formData);\n    // }\n}\n","import { AntdFormItemTemp } from \"./formitem\";\nimport { AntdColTemp } from \"./col\";\nimport { AntdRowTemp } from \"./row\";\nimport { AntdCardTemp } from \"./card\";\n\nexport default {\n    formItem: AntdFormItemTemp,\n    col: AntdColTemp,\n    row: AntdRowTemp,\n    card: AntdCardTemp\n};\n","import React from \"react\";\nimport { Form, Input } from \"antd\";\nimport { FormItemProps } from \"antd/lib/form/FormItem\";\n\nimport { SchemaFormItemProps } from \"../components/formitem\";\n\nexport interface AntdFormItemTempProps extends SchemaFormItemProps {\n    tempKey: string;\n}\n\nexport class AntdFormItemTemp extends React.Component<AntdFormItemTempProps, any> {\n    public render(): JSX.Element {\n        const { children, arrayIndex, arrayItems, mergeSchema, globalOptions = {}, tempKey, uiSchemaOptions,\n            meta = { dirty: false, isValid: true }\n        } = this.props;\n        const tempOptions = Object.assign({}, globalOptions[tempKey] || {}, uiSchemaOptions[tempKey] || {});\n        const { hasFeedback = false } = tempOptions;\n        let props: FormItemProps = {};\n        let { dirty, isValid, errorText = \"\" } = meta;\n\n        if (dirty) {\n            props.validateStatus = !isValid ? \"error\" : \"success\";\n        }\n\n        return (\n            <Form.Item\n                required={mergeSchema.isRequired}\n                label={mergeSchema.title || [].concat(mergeSchema.keys).pop()}\n                extra={mergeSchema.description}\n                help={isValid ? \"\" : errorText}\n                hasFeedback={dirty && hasFeedback}\n                {...props}\n                {...tempOptions}>\n                {children}\n                {arrayItems}\n            </Form.Item>\n        );\n    }\n}\n","import React from \"react\";\nimport { Col } from \"antd\";\n\nimport { SchemaFormItemProps } from \"../components/formitem\";\n\nexport interface AntdColTempProps extends SchemaFormItemProps {\n    tempKey: string;\n}\n\nexport class AntdColTemp extends React.Component<AntdColTempProps, any> {\n    public render(): JSX.Element {\n        const { children, globalOptions, mergeSchema, tempKey, uiSchemaOptions } = this.props;\n        const tempOptions = Object.assign({}, globalOptions[tempKey] || {}, uiSchemaOptions[tempKey] || {});\n\n        return (\n            <Col {...tempOptions}>\n                {children}\n            </Col>\n        );\n    }\n}\n","import React from \"react\";\nimport { Row } from \"antd\";\n\nimport { SchemaFormItemProps } from \"../components/formitem\";\n\nexport interface AntdRowTempProps extends SchemaFormItemProps {\n    tempKey: string;\n}\n\nexport class AntdRowTemp extends React.Component<AntdRowTempProps, any> {\n    public render(): JSX.Element {\n        const { children, globalOptions, tempKey, uiSchemaOptions, mergeSchema } = this.props;\n        const tempOptions = Object.assign({}, globalOptions[tempKey] || {}, uiSchemaOptions[tempKey] || {});\n\n        return (\n            <Row {...tempOptions}>\n                {children}\n            </Row>\n        );\n    }\n}\n","import React from \"react\";\nimport { Card } from \"antd\";\n\nimport { SchemaFormItemProps } from \"../components/formitem\";\n\nexport interface AntdCardTempProps extends SchemaFormItemProps {\n    tempKey: string;\n}\n\nexport class AntdCardTemp extends React.Component<AntdCardTempProps, any> {\n    public render(): JSX.Element {\n        const { children, globalOptions, tempKey, uiSchemaOptions, mergeSchema, arrayItems } = this.props;\n        const tempOptions = Object.assign({}, globalOptions[tempKey] || {}, uiSchemaOptions[tempKey] || {});\n        const { uiSchema, title } = mergeSchema;\n\n        return (\n            <Card {...tempOptions} title={title || uiSchema.title} extra={arrayItems}>\n                {children}\n            </Card>\n        );\n    }\n}\n","import { AntdInputWidget } from \"./input\";\nimport { AntdCheckboxWidget } from \"./checkbox\";\nimport { AntdSwitchWidget } from \"./switch\";\n\nexport default {\n    input: AntdInputWidget,\n    string: AntdInputWidget,\n    checkbox: AntdCheckboxWidget,\n    boolean: AntdCheckboxWidget,\n    switch: AntdSwitchWidget\n};\n","import React, { SyntheticEvent } from \"react\";\nimport { Input, Icon } from \"antd\";\nimport { InputProps } from \"antd/lib/input/Input\";\n\nimport { SchemaFormItemProps } from \"../components/formitem\";\n\nexport interface AntdInputWidgetProps extends SchemaFormItemProps {\n}\n\nexport class AntdInputWidget extends React.Component<AntdInputWidgetProps, any> {\n    public componentDidMount(): void {\n        console.log(\"input mounted!\");\n    }\n    private setDefaultProps(): InputProps {\n        const { mergeSchema } = this.props;\n        const props: InputProps = {};\n\n        if (this.props.formItemData !== undefined) {\n            props.value = this.props.formItemData;\n        } else {\n            props.defaultValue = mergeSchema.default;\n            props.value = \"\";\n        }\n\n        return props;\n    }\n\n    public render(): JSX.Element {\n        const { mergeSchema, arrayIndex, globalOptions, uiSchemaOptions, schemaFormOptions, schemaKey, validate } = this.props;\n        const { input = {} } = uiSchemaOptions.widget || {};\n        const { input: inputDefault = {} } = globalOptions.widget || {};\n        const { uiSchema = {}, keys } = mergeSchema;\n        const { readonly = false } = uiSchema as any;\n\n        // console.log(this.props.meta);\n\n        return (\n            <Input onChange={(e: SyntheticEvent<HTMLInputElement>) => {\n                validate(e.currentTarget.value);\n            }}\n                disabled={readonly}\n                placeholder={mergeSchema.title}\n                {...input}\n                {...inputDefault}\n                {...this.setDefaultProps() }>\n            </Input>\n        );\n    }\n}\n","import React, { SyntheticEvent } from \"react\";\nimport { Checkbox } from \"antd\";\nimport { CheckboxProps } from \"antd/lib/checkbox/Checkbox\";\n\nimport { SchemaFormItemProps } from \"../components/formitem\";\n\n\nexport interface AntdCheckBoxProps extends SchemaFormItemProps {\n}\n\nexport class AntdCheckboxWidget extends React.Component<AntdCheckBoxProps, any> {\n    private setDefaultProps(): CheckboxProps {\n        const { mergeSchema } = this.props;\n        const props: CheckboxProps = {};\n\n        if (this.props.formItemData !== undefined) {\n            props.checked = this.props.formItemData;\n        } else {\n            props.defaultChecked = mergeSchema.default;\n        }\n\n        return props;\n    }\n\n    public render(): JSX.Element {\n        const { mergeSchema, arrayIndex, globalOptions, uiSchemaOptions, meta, validate } = this.props;\n        const { checkbox = {} } = uiSchemaOptions.widget || {};\n        const { checkbox: checkboxDefault = {} } = globalOptions.widget || {};\n        const { uiSchema = {}, keys } = mergeSchema;\n        const { readonly = false } = uiSchema as any;\n\n        return (\n            <Checkbox onChange={(e: SyntheticEvent<HTMLInputElement>) => {\n                validate((e.target as any).checked);\n            }}\n                disabled={readonly}\n                {...checkbox}\n                {...checkboxDefault}\n                {...this.setDefaultProps() }\n            ></Checkbox>\n        );\n    }\n}\n","import React, { SyntheticEvent } from \"react\";\nimport { Switch } from \"antd\";\nimport { SwitchProps } from \"antd/lib/switch\";\n\nimport { SchemaFormItemProps } from \"../components/formitem\";\n\nexport interface AntdSwitchProps extends SchemaFormItemProps {\n}\n\nexport class AntdSwitchWidget extends React.Component<AntdSwitchProps, any> {\n\n    private setDefaultProps(): SwitchProps {\n        const { mergeSchema } = this.props;\n        const props: SwitchProps = {};\n\n        if (this.props.formItemData !== undefined) {\n            props.checked = this.props.formItemData;\n        } else {\n            props.defaultChecked = mergeSchema.default;\n        }\n\n        return props;\n    }\n\n    public render(): JSX.Element {\n        const { mergeSchema, arrayIndex, globalOptions, uiSchemaOptions, meta, validate } = this.props;\n        const { switch: switcho = {} } = uiSchemaOptions.widget || {};\n        const { switch: switchDefault = {} } = globalOptions.widget || {};\n        const { uiSchema = {}, keys } = mergeSchema;\n        const { readonly = false } = uiSchema as any;\n\n        return (\n            <Switch onChange={(checked: boolean) => {\n                validate(checked);\n            }}\n                disabled={readonly}\n                {...switchDefault}\n                {...switcho}\n                {...this.setDefaultProps() }></Switch >\n        );\n    }\n}\n","\nimport { FormReducer } from \"../reducer/form\";\n\nexport default (forms: { [id: string]: any } = {}) => {\n    let reducers: any = {};\n\n    for (let key in forms) {\n        if (forms.hasOwnProperty(key)) {\n            let element = forms[key];\n            let meta: any = {};\n            let reducer = new FormReducer({\n                data: element,\n                meta: meta\n            });\n\n            meta.actions = reducer.actions;\n\n            if (element) {\n                reducers[key] = reducer.reducer;\n            }\n        }\n    }\n\n    return reducers;\n};\n","import { createAction, createReducer, EmptyActionCreator, SimpleActionCreator, ComplexActionCreator } from \"redux-act\";\nimport { Reducer } from \"redux\";\nimport * as jpp from \"json-pointer\";\n\nexport class FormReducer {\n    /**\n     * 单个元素的值变化时候调用\n     */\n    private updateItem: SimpleActionCreator<{ keys: Array<string>, data: any }> = createAction(\"更新表单值\");\n    /**\n     * 验证所有的字段\n     */\n    private validateAllField: EmptyActionCreator = createAction(\"验证表单中所有的字段\");\n\n    constructor(private initialState: any) { }\n\n    public get actions(): {\n        updateItem: SimpleActionCreator<{ keys: Array<string>, data: any }>\n    } {\n        return {\n            updateItem: this.updateItem\n        };\n    }\n\n    public get reducer(): Reducer<any> {\n        return createReducer<any>({\n            [this.updateItem as any]: (state: any, { keys, data, meta }:\n                { keys: Array<string>, data: any, meta: { isValid: boolean } }) => {\n                let originData = Object.assign({}, state.data);\n                let originMeta = Object.assign({}, state.meta);\n\n                jpp(originData).set(jpp.compile(keys), data);\n                jpp(originMeta).set(jpp.compile(keys), meta);\n\n                return Object.assign({}, state, { data: originData, meta: originMeta });\n            }\n        }, this.initialState);\n    }\n}\n",null,null,null,null]}